<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Admin_Model extends CI_Model {

    public function __construct(){
        parent::__construct();
    }

    function login($email, $pass){
        $query = $this->db->select('id, email, contrasena', 'tipo', 'estatus')
        ->from('usuario')
        ->where(array('email' => $email, 'contrasena' => $pass, 'tipo' => 1, 'estatus' => 1))
        ->count_all_results();
        //echo $this->db->last_query();
        return $query;
    }

    //Listar Datos
    function mostrar($buscar = NULL, $inicio = FALSE, $cantidad = FALSE, $tabla = NULL){
        switch ($tabla) {
            case 'usuario':
                if ($inicio !== FALSE && $cantidad !== FALSE) {
                    $this->db->limit($cantidad, $inicio);
                }
                $query = $this->db
                ->select('u.id,u.nombre,u.apellido,u.email,p.pais,m.membresia,c.caducidad,fecha_registro,u.estatus')
                ->from('usuario as u')
                ->join('cliente as c','u.id = c.usuario_id','LEFT')
                ->join('pais as p', 'p.id = c.pais_id')
                ->join('membresia as m', 'm.id = c.membresia_id')
                ->where('u.tipo = 3')
                ->like('u.nombre', $buscar)
                ->or_like('u.apellido', $buscar)
                ->or_like('u.email', $buscar)
                ->order_by('u.nombre', 'ASC')
                ->get();                       
                return $query->result();
            break;
            case 'contenido':
                if ($inicio !== FALSE && $cantidad !== FALSE) {
                    $this->db->limit($cantidad, $inicio);
                }
                $query = $this->db
                ->select('c.id,c.titulo,a.autor,cat.categoria,tc.anio,tc.enlace,c.estatus')
                ->from('contenido as c')
                ->join('tipo_contenido as tc', 'tc.contenido_id = c.id', 'LEFT')
                ->join('autor as a', 'c.autor_id = a.id', 'LEFT')
                ->join('categoria as cat', 'c.categoria_id = cat.id', 'LEFT')
                ->like('c.titulo', $buscar)
                ->or_like('a.autor', $buscar)
                ->or_like('cat.categoria', $buscar)
                ->order_by('c.id', 'ASC')
                ->get();                   
                return $query->result();
            break;
            case 'autor':
            case 'categoria':
            case 'portada':
                $this->db->like($tabla, $buscar)->order_by($tabla, 'ASC');
                if ($inicio !== FALSE && $cantidad !== FALSE) {
                    $this->db->limit($cantidad, $inicio);
                }
                $query = $this->db->get($tabla);
                return $query->result();
            break;
            case 'noticias':
                $query = $this->db
                ->select('n.id,n.titulo,n.fecha,n.estatus,t.tipo')
                ->from('noticias as n')
                ->join('tipo_noticia as t','t.id = n.tipo_noticia_id','LEFT')
                ->like('n.titulo', $buscar)
                ->or_like('t.tipo', $buscar)
                ->order_by('n.id', 'DESC')
                ->get();                       
                return $query->result();
            break;
        }
    }

    function mostrarSlides($tipo){
        $query = $this->db
        ->from('slides')
        ->where('tipo', $tipo)
        ->order_by('id', "ASC")
        ->get();
        return $query->result();
    }

    //Fin listar Datos

    //Guardar Datos
    function guardarUsuario($datos, $data) {     
        $this->db->insert('usuario', $datos);
        $data2 = array(
            'usuario_id' => $this->db->insert_id(),
            'pais_id' => $data['pais'],
            'vida' => $data['vida'],
            'membresia_id' => $data['membresia']
        );
        $this->db->insert('cliente', $data2);
        if($this->db->affected_rows() > 0){
            return TRUE;
        }
        else{
            return FALSE;
        }  
    }

    function guardarCodigos($datos){
        $this->db->insert('codigos', $datos);
    }

    function guardarContenido($datos, $data){
        $this->db->insert('catalogo', $datos);
        $dato = array(
            'catalogo_id' => $this->db->insert_id(),
            'tipo' => $data['tipo'],
            'enlace' => $data['enlace'],
            'anio' => $data['anio'],
        );
        $this->db->insert('contenido', $dato);
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function guardarAutor($datos) {
        $this->db->insert('autor', $datos);
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function guardarCategoria($datos){
        $this->db->set('categoria', $datos);
        $this->db->insert('categoria');
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function guardarPortada($datos){
        $this->db->insert('portada', $datos);
    }

    function guardarSlide($datos){
        if($this->db->insert('slides', $datos)){
            return TRUE;
        }
        return FALSE;
    }

    function guardarNoticia($datos){
        $this->db->insert('noticias', $datos);
    }
    //Fin guardar Datos

    //Editar Datos
    function getUsuario($id){
        $query = $this->db
        ->select('u.tipo,u.nombre,u.apellido,u.email,u.estatus,p.id,m.id,u.contrasena')
        ->from('usuario as u')
        ->join('cliente as c','u.id = c.usuario_id','LEFT')
        ->join('pais as p', 'p.id = c.pais_id')
        ->join('membresia as m', 'm.id = c.membresia_id')
        ->where('u.id', $id)
        ->get();                       
        return $query->row();
    }
    
    function getContenido($id){
        $query = $this->db
        ->select('c.titulo,tc.estatus,a.id,cat.id,cont.anio,tc.enlace,c.tipo,p.id')
        ->from('contenido as c')
        ->join('tipo_contenido as tc', 'c.id = tc.contenido_id', 'LEFT')
        ->join('autor as a', 'c.autor_id = a.id', 'LEFT')
        ->join('categoria as cat', 'c.categoria_id = cat.id', 'LEFT')
        ->join('portada as p', 'c.portada_id = p.id', 'LEFT')
        ->where('c.id', $id)
        ->get();                       
        return $query->row();
    }

    function getAutor($id) {
        $query = $this->db
        ->from('autor')
        ->where('id', $id)
        ->get();                       
        return $query->row();
    }

    function getCategoria($id){
        $query = $this->db
        ->from('categoria')
        ->where('id', $id)
        ->get();                       
        return $query->row();
    }

    function getSlide(){
        $query = $this->db
        ->from('slides')
        ->where('idSlides', $id)
        ->get();
        return $query->row();
    }

    function getNoticia($id){
        $query = $this->db
        ->from('noticias')
        ->where('id', $id)
        ->get();                       
        return $query->row();
    }
    //Fin editar Datos

    //Actualizar Datos
    function actualizarUsuario($datos, $data){
        $this->db->where('id', $datos['idUsuario']);
        $this->db->update('usuario', $datos);
        $data2 = array(
            'pais_id' => $data['pais'],
            'membresia_id' => $data['membresia']
        );
        $this->db->where('usuario_id', $datos['idUsuario']);
        $this->db->update('cliente', $data2);
    }

    function actualizarContenido($datos, $data){
        $this->db->where('id', $datos['idCatalogo']);
        $this->db->update('catalogo', $datos);
         
        if($this->db->affected_rows() > 0) {
            $dato = array(
                'tipo' => $data['tipo'],
                'enlace' => $data['enlace'],
                'anio' => $data['anio'],
            );
            $this->db->where('catalogo_id', $datos['idCatalogo']);
            $this->db->update('contenido', $dato);
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function actualizarAutor($datos){
        $this->db->where('id', $datos['idAutor']);
        $this->db->update('autor', $datos);
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function actualizarCategoria($datos){
        $this->db->where('id', $datos['idCategoria']);
        $this->db->update('categoria', $datos);
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function actualizarNoticia($datos){
        $this->db->where('id', $datos['idNoticias']);
        $this->db->update('noticias', $datos);
    }
    //Fin actualizar Datos

    //Eliminar Datos
    function eliminarUsuario($id){
        $this->db->delete('cliente', array('usuario_id' => $id));
        $this->db->delete('usuario', array('id' => $id));
    }

    function eliminarContenido($id){
        $this->db->delete('contenido', array('catalogo_id' => $id));
        $this->db->delete('catalogo', array('id' => $id));
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function eliminarAutor($id){
        $this->db->delete('autor', array('id' => $id));
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function eliminarCategoria($id){
        $this->db->delete('categoria', array('id' => $id));
        if($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    function eliminarPortada($id){
        $this->db->delete('portada', array('id' => $id));
    }

    function eliminarSlide($id){
        $this->db->delete('slides', array('id' => $id));
    } 

    function eliminarNoticia($id){
        $this->db->delete('noticias', array('id' => $id));
    } 
    //Fin eliminar Datos

    //Estatus Datos
    function estatusUsuario($id, $estatus){
        $this->db->where('id', $id);
        $this->db->update('usuario', array('estatus' => $estatus));
    }

    function estatusContenido($id, $estatus){
        $this->db->where('id', $id);
        $this->db->update('catalogo', array('estatus' => $estatus));
    }

    function estatusSlide($id, $estatus){
        $this->db->where('id', $id);
        $this->db->update('slides', array('estatus' => $estatus));
    }

    function estatusNoticia($id, $estatus){
        $this->db->where('id', $id);
        $this->db->update('noticias', array('estatus' => $estatus));
    }
    //Fin estatus Datos

    //Filtrar Datos
    function filtrarContenido($filtro){
         $query = $this->db
        ->select('c.id,cat.titulo,a.autor,cat.categoria,tc.anio,tc.enlace,tc.tipo,c.estatus')
        ->from('contenido as c')
        ->join('tipo_contenido as tc', 'c.id = tc.catalogo_id', 'LEFT')
        ->join('autor as a', 'c.autor_id = a.id', 'LEFT')
        ->join('categoria as cat', 'c.categoria_id = cat.id', 'LEFT')
        ->like('tc.tipo', $filtro)
        ->order_by('c.id', 'ASC')      
        ->get();                       
        return $query->result();
    }
    //Fin filtrar Datos

    //Listar en formulario Datos
    function getPais(){
        $query = $this->db
        ->from('pais')
        ->order_by("id", "ASC")
        ->get();
        return $query->result();
    }

    function getMembresia(){
        $query = $this->db
        ->from('membresia')
        ->order_by("id", "ASC")
        ->get();
        return $query->result();
    }

    function listarAutor(){
        $query = $this->db
        ->from('autor')
        ->order_by('autor', 'ASC')
        ->get();
        return $query->result();
    }

    function listarCategoria(){
        $query = $this->db
        ->from('categoria')
        ->order_by('categoria', 'ASC')
        ->get();
        return $query->result();
    }

    function getEntradas(){
        $query = $this->db
        ->from('tipo_noticia')
        ->get();                       
        return $query->result();
    }

    //Fin listar en formulario Datos
}